==27048== Memcheck, a memory error detector
==27048== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27048== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==27048== Command: ./ftt food.dat coins.dat
==27048== Parent PID: 27047
==27048== 
--27048-- 
--27048-- Valgrind options:
--27048--    --tool=memcheck
--27048--    --log-file=valrep.txt
--27048--    --leak-check=full
--27048--    --track-origins=yes
--27048--    -v
--27048-- Contents of /proc/version:
--27048--   Linux version 3.10.0-1160.118.1.el7.x86_64 (mockbuild@x86-vm-43.build.eng.bos.redhat.com) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) #1 SMP Thu Apr 4 03:33:23 EDT 2024
--27048-- 
--27048-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--27048-- Page sizes: currently 4096, max supported 4096
--27048-- Valgrind library directory: /opt/rh/devtoolset-7/root/usr/lib64/valgrind
--27048-- Reading syms from /home/sh9/S3651259/assignment-2-cosc1076/ftt
--27048-- Reading syms from /usr/lib64/ld-2.17.so
--27048--   Considering /usr/lib/debug/.build-id/62/c449974331341bb08dcce3859560a22af1e172.debug ..
--27048--   .. build-id is valid
--27048-- Reading syms from /opt/rh/devtoolset-7/root/usr/lib64/valgrind/memcheck-amd64-linux
--27048--    object doesn't have a symbol table
--27048--    object doesn't have a dynamic symbol table
--27048-- Scheduler: using generic scheduler lock implementation.
--27048-- Reading suppressions file: /opt/rh/devtoolset-7/root/usr/lib64/valgrind/default.supp
==27048== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-27048-by-s3651259-on-csitprdap03
==27048== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-27048-by-s3651259-on-csitprdap03
==27048== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-27048-by-s3651259-on-csitprdap03
==27048== 
==27048== TO CONTROL THIS PROCESS USING vgdb (which you probably
==27048== don't want to do, unless you know exactly what you're doing,
==27048== or are doing some strange experiment):
==27048==   /opt/rh/devtoolset-7/root/usr/lib64/valgrind/../../bin/vgdb --pid=27048 ...command...
==27048== 
==27048== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==27048==   /path/to/gdb ./ftt
==27048== and then give GDB the following command
==27048==   target remote | /opt/rh/devtoolset-7/root/usr/lib64/valgrind/../../bin/vgdb --pid=27048
==27048== --pid is optional if only one valgrind process is running
==27048== 
--27048-- REDIR: 0x4019e40 (ld-linux-x86-64.so.2:strlen) redirected to 0x58059d91 (???)
--27048-- REDIR: 0x4019c10 (ld-linux-x86-64.so.2:index) redirected to 0x58059dab (???)
--27048-- Reading syms from /opt/rh/devtoolset-7/root/usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--27048-- Reading syms from /opt/rh/devtoolset-7/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==27048== WARNING: new redirection conflicts with existing -- ignoring it
--27048--     old: 0x04019e40 (strlen              ) R-> (0000.0) 0x58059d91 ???
--27048--     new: 0x04019e40 (strlen              ) R-> (2007.0) 0x04c2ca70 strlen
--27048-- REDIR: 0x4019dc0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2dbc0 (strcmp)
--27048-- REDIR: 0x401aa80 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c30c40 (mempcpy)
--27048-- Reading syms from /usr/lib64/libstdc++.so.6.0.19
--27048--    object doesn't have a symbol table
--27048-- Reading syms from /usr/lib64/libm-2.17.so
--27048--   Considering /usr/lib/debug/.build-id/76/15604eaf4a068dfae5085444d15c0dee93dfbd.debug ..
--27048--   .. build-id is valid
--27048-- Reading syms from /usr/lib64/libgcc_s-4.8.5-20150702.so.1
--27048--    object doesn't have a symbol table
--27048-- Reading syms from /usr/lib64/libc-2.17.so
--27048--   Considering /usr/lib/debug/.build-id/fc/4fa58e47a5acc137eadb7689bce4357c557a96.debug ..
--27048--   .. build-id is valid
--27048-- REDIR: 0x56e61d0 (libc.so.6:strcasecmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x56e2f40 (libc.so.6:strnlen) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x56e84d0 (libc.so.6:strncasecmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x56e59a0 (libc.so.6:memset) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x56e5950 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x56e4930 (libc.so.6:__GI_strrchr) redirected to 0x4c2c430 (__GI_strrchr)
--27048-- REDIR: 0x56e2e60 (libc.so.6:__GI_strlen) redirected to 0x4c2c9d0 (__GI_strlen)
--27048-- REDIR: 0x56e53c0 (libc.so.6:__GI_memcmp) redirected to 0x4c2f4b0 (__GI_memcmp)
--27048-- REDIR: 0x56e13c0 (libc.so.6:strcmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x5794fc0 (libc.so.6:__strcmp_sse42) redirected to 0x4c2db70 (__strcmp_sse42)
--27048-- REDIR: 0x56e2e10 (libc.so.6:strlen) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x57c58b0 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c2c9b0 (strlen)
--27048-- REDIR: 0x4e95170 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4c2a15c (operator new(unsigned long))
--27048-- REDIR: 0x57b0210 (libc.so.6:__memmove_ssse3_back) redirected to 0x4c2dd20 (memcpy@GLIBC_2.2.5)
--27048-- REDIR: 0x4e932e0 (libstdc++.so.6:operator delete(void*)) redirected to 0x4c2b0e6 (operator delete(void*))
--27048-- REDIR: 0x56eabc0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x57aac70 (libc.so.6:__memcpy_ssse3_back) redirected to 0x4c2df80 (memcpy@@GLIBC_2.14)
--27048-- REDIR: 0x56db740 (libc.so.6:malloc) redirected to 0x4c29b3c (malloc)
--27048-- REDIR: 0x56fba10 (libc.so.6:__GI_strstr) redirected to 0x4c30ed0 (__strstr_sse2)
--27048-- REDIR: 0x4e95280 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long))
--27048-- REDIR: 0x56e5380 (libc.so.6:bcmp) redirected to 0x4a24740 (_vgnU_ifunc_wrapper)
--27048-- REDIR: 0x57c01e0 (libc.so.6:__memcmp_sse4_1) redirected to 0x4c2f5f0 (__memcmp_sse4_1)
--27048-- REDIR: 0x56e5030 (libc.so.6:memchr) redirected to 0x4c2dc60 (memchr)
--27048-- REDIR: 0x56eac30 (libc.so.6:__GI_memcpy) redirected to 0x4c2e560 (__GI_memcpy)
--27048-- REDIR: 0x4e93310 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*))
--27048-- REDIR: 0x56dbb60 (libc.so.6:free) redirected to 0x4c2ac36 (free)
--27048-- REDIR: 0x56e5b70 (libc.so.6:__GI_mempcpy) redirected to 0x4c30970 (__GI_mempcpy)
--27048-- REDIR: 0x56ec4b0 (libc.so.6:strchrnul) redirected to 0x4c30760 (strchrnul)
==27048== Invalid read of size 8
==27048==    at 0x404998: std::__shared_ptr<FoodItem, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<FoodItem, (__gnu_cxx::_Lock_policy)2> const&) (shared_ptr_base.h:1034)
==27048==    by 0x4049E6: std::shared_ptr<FoodItem>::operator=(std::shared_ptr<FoodItem> const&) (shared_ptr.h:93)
==27048==    by 0x403FB7: LinkedList::insert(std::shared_ptr<FoodItem>&, std::map<std::string, std::shared_ptr<Node>, std::less<std::string>, std::allocator<std::pair<std::string const, std::shared_ptr<Node> > > >&) (LinkedList.cpp:104)
==27048==    by 0x40E27D: main (main.cpp:320)
==27048==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==27048== 
==27048== 
==27048== Process terminating with default action of signal 11 (SIGSEGV)
==27048==  Access not within mapped region at address 0x0
==27048==    at 0x404998: std::__shared_ptr<FoodItem, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<FoodItem, (__gnu_cxx::_Lock_policy)2> const&) (shared_ptr_base.h:1034)
==27048==    by 0x4049E6: std::shared_ptr<FoodItem>::operator=(std::shared_ptr<FoodItem> const&) (shared_ptr.h:93)
==27048==    by 0x403FB7: LinkedList::insert(std::shared_ptr<FoodItem>&, std::map<std::string, std::shared_ptr<Node>, std::less<std::string>, std::allocator<std::pair<std::string const, std::shared_ptr<Node> > > >&) (LinkedList.cpp:104)
==27048==    by 0x40E27D: main (main.cpp:320)
==27048==  If you believe this happened as a result of a stack
==27048==  overflow in your program's main thread (unlikely but
==27048==  possible), you can try to increase the size of the
==27048==  main thread stack using the --main-stacksize= flag.
==27048==  The main thread stack size used in this run was 8388608.
==27048== 
==27048== HEAP SUMMARY:
==27048==     in use at exit: 3,433 bytes in 63 blocks
==27048==   total heap usage: 203 allocs, 140 frees, 24,920 bytes allocated
==27048== 
==27048== Searching for pointers to 63 not-freed blocks
==27048== Checked 190,528 bytes
==27048== 
==27048== LEAK SUMMARY:
==27048==    definitely lost: 0 bytes in 0 blocks
==27048==    indirectly lost: 0 bytes in 0 blocks
==27048==      possibly lost: 0 bytes in 0 blocks
==27048==    still reachable: 3,433 bytes in 63 blocks
==27048==                       of which reachable via heuristic:
==27048==                         stdstring          : 1,209 bytes in 25 blocks
==27048==         suppressed: 0 bytes in 0 blocks
==27048== Reachable blocks (those to which a pointer was found) are not shown.
==27048== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27048== 
==27048== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==27048== 
==27048== 1 errors in context 1 of 1:
==27048== Invalid read of size 8
==27048==    at 0x404998: std::__shared_ptr<FoodItem, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<FoodItem, (__gnu_cxx::_Lock_policy)2> const&) (shared_ptr_base.h:1034)
==27048==    by 0x4049E6: std::shared_ptr<FoodItem>::operator=(std::shared_ptr<FoodItem> const&) (shared_ptr.h:93)
==27048==    by 0x403FB7: LinkedList::insert(std::shared_ptr<FoodItem>&, std::map<std::string, std::shared_ptr<Node>, std::less<std::string>, std::allocator<std::pair<std::string const, std::shared_ptr<Node> > > >&) (LinkedList.cpp:104)
==27048==    by 0x40E27D: main (main.cpp:320)
==27048==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==27048== 
==27048== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
